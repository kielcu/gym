<?php
/**
 * Created by PhpStorm.
 * User: l.kielczewski
 * Date: 2019-04-05
 * Time: 13:45
 */

namespace Test\Unit\App\Http\Controllers;


use App\Models\Muscle;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class MuscleControllerTest extends TestCase
{
    use RefreshDatabase;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        Muscle::query()->create([
            'name' => 'biceps'
        ]);
    }

//    public function testIndex()
//    {
//
//    }

    public function testCreate()
    {
        $response = $this->get(route('muscle.create'));

        $response->assertSee('name');
        $response->assertSee('submit');

        $response->assertStatus(200);
    }

    public function testStore_success()
    {
        $response = $this->post(route('muscle.store'), [
            'name' => 'klatka'
        ]);

        $response->assertStatus(302);
        $response->assertRedirect(route('muscle.index'));
        $response->assertSessionHas('status-success');
    }

    public function testStore_filed_and_redirect()
    {
        $response = $this->post(route('muscle.store'), []);

        $response->assertStatus(302);
        $response->assertRedirect(route('muscle.create'));
        $response->assertSessionHasErrors();
    }

//    public function testShow()
//    {
//
//    }

    public function testEdit()
    {
        $muscle = Muscle::query()->first();
        $response = $this->get(route('muscle.edit', $muscle->id));

        $response->assertSee('name');
        $response->assertSee($muscle->name);
        $response->assertSee('submit');

        $response->assertStatus(200);
    }

    public function testUpdate_success()
    {
        $muscle = Muscle::query()->first();
        $response = $this->put(route('muscle.update', $muscle->id), [
            'name' => 'chest'
        ]);

        $response->assertStatus(302);
        $response->assertRedirect(route('muscle.index'));
        $response->assertSessionHas('status-success');
    }

    public function testUpdate_failed_and_redirect()
    {
        $muscle = Muscle::query()->first();
        $response = $this->put(route('muscle.update', $muscle->id), [
            'name' => 'biceps'
        ]);

        $response->assertStatus(302);
        $response->assertRedirect(route('muscle.edit', $muscle->id));
        $response->assertSessionHasErrors();
    }

    public function testDestroy()
    {
        $muscle = Muscle::query()->first();
        $response = $this->delete(route('muscle.destroy', $muscle->id));

        $response->assertStatus(302);
        $response->assertRedirect(route('muscle.index'));
        $response->assertSessionHas('status-success');
    }
}
